"use strict";(self.webpackChunkdocusaurus=self.webpackChunkdocusaurus||[]).push([[668],{3905:(e,t,n)=>{n.d(t,{Zo:()=>p,kt:()=>u});var a=n(7294);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function r(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function s(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?r(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):r(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function i(e,t){if(null==e)return{};var n,a,o=function(e,t){if(null==e)return{};var n,a,o={},r=Object.keys(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var l=a.createContext({}),c=function(e){var t=a.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):s(s({},t),e)),n},p=function(e){var t=c(e.components);return a.createElement(l.Provider,{value:t},e.children)},d={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},m=a.forwardRef((function(e,t){var n=e.components,o=e.mdxType,r=e.originalType,l=e.parentName,p=i(e,["components","mdxType","originalType","parentName"]),m=c(n),u=o,h=m["".concat(l,".").concat(u)]||m[u]||d[u]||r;return n?a.createElement(h,s(s({ref:t},p),{},{components:n})):a.createElement(h,s({ref:t},p))}));function u(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var r=n.length,s=new Array(r);s[0]=m;var i={};for(var l in t)hasOwnProperty.call(t,l)&&(i[l]=t[l]);i.originalType=e,i.mdxType="string"==typeof e?e:o,s[1]=i;for(var c=2;c<r;c++)s[c]=n[c];return a.createElement.apply(null,s)}return a.createElement.apply(null,n)}m.displayName="MDXCreateElement"},7764:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>l,contentTitle:()=>s,default:()=>d,frontMatter:()=>r,metadata:()=>i,toc:()=>c});var a=n(7462),o=(n(7294),n(3905));const r={},s="Context",i={unversionedId:"intro/context",id:"intro/context",title:"Context",description:"The Context object is an important part of Opengram.",source:"@site/docs/intro/context.mdx",sourceDirName:"intro",slug:"/intro/context",permalink:"/docs/intro/context",draft:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/intro/context.mdx",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Getting Started",permalink:"/docs/intro/getting-started"},next:{title:"Middleware",permalink:"/docs/intro/middleware"}},l={},c=[{value:"Available Information",id:"available-information",level:3},{value:"Shortcuts",id:"shortcuts",level:3},{value:"Available Actions",id:"available-actions",level:3},{value:"How Context Objects Are Created",id:"how-context-objects-are-created",level:3},{value:"Customizing the Context Object",id:"customizing-the-context-object",level:3},{value:"Via Middleware",id:"via-middleware",level:3},{value:"Via Inheritance",id:"via-inheritance",level:3},{value:"Via <code>bot.context</code>",id:"via-botcontext",level:3}],p={toc:c};function d(e){let{components:t,...n}=e;return(0,o.kt)("wrapper",(0,a.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"context"},"Context"),(0,o.kt)("p",null,"The Context object is an important part of ",(0,o.kt)("strong",{parentName:"p"},"Opengram"),"."),(0,o.kt)("p",null,"Whenever you register a middleware / handler on your bot object, this listener will receive a context object."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-js",metastring:"showLineNumbers",showLineNumbers:!0},'bot.on("message", (ctx) => {\n  // `ctx` is the `Context` object.\n});\n')),(0,o.kt)("p",null,"The context object provides a raw update object with additional methods for sending response and shortcuts for easy\naccess to data from the update."),(0,o.kt)("admonition",{type:"note"},(0,o.kt)("p",{parentName:"admonition"},"Context objects are commonly called ",(0,o.kt)("inlineCode",{parentName:"p"},"ctx")," / ",(0,o.kt)("inlineCode",{parentName:"p"},"context"))),(0,o.kt)("h3",{id:"available-information"},"Available Information"),(0,o.kt)("p",null,"When a user sends a message to your bot, you can access it via ",(0,o.kt)("inlineCode",{parentName:"p"},"ctx.message"),". As an example, to get the message text,\nyou can do this:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-js",metastring:"showLineNumbers",showLineNumbers:!0},'bot.on("message", (ctx) => {\n  // `text` will be a `string` when processing text messages.\n  // It will be `undefined` if the received message does not have any message text,\n  // e.g. photos, stickers, and other messages.\n  const text = ctx.message.text;\n  console.log(text)\n});\n')),(0,o.kt)("p",null,"Similarly, you can access other properties of the message object, e.g. ",(0,o.kt)("inlineCode",{parentName:"p"},"ctx.message.chat")," for information\nabout the chat where the message was sent.\nCheck out the ",(0,o.kt)("a",{parentName:"p",href:"https://core.telegram.org/bots/api#message"},"part about Messages in the Telegram Bot API Reference"),"\nto see which data is available."),(0,o.kt)("p",null,"If you register your listener for other types, ctx will also give you information about those. Example:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-js",metastring:"showLineNumbers",showLineNumbers:!0},'bot.on("edited_message", (ctx) => {\n  // Get the new, edited, text of the message.\n  const editedText = ctx.editedMessage.text;\n});\n')),(0,o.kt)("p",null,"Moreover, you can get access to the raw ",(0,o.kt)("inlineCode",{parentName:"p"},"Update")," object\n(",(0,o.kt)("a",{parentName:"p",href:"https://core.telegram.org/bots/api#update"},"Telegram Bot API Reference"),") that Telegram sends to your bot.\nThis update object (",(0,o.kt)("inlineCode",{parentName:"p"},"ctx.update"),") contains all the data that sources ",(0,o.kt)("inlineCode",{parentName:"p"},"ctx.message")," and the like."),(0,o.kt)("p",null,"The context object always contains information about your bot, accessible via ",(0,o.kt)("inlineCode",{parentName:"p"},"ctx.me"),"."),(0,o.kt)("h3",{id:"shortcuts"},"Shortcuts"),(0,o.kt)("p",null,"There are a number of shortcuts installed on the context object."),(0,o.kt)("table",null,(0,o.kt)("thead",{parentName:"table"},(0,o.kt)("tr",{parentName:"thead"},(0,o.kt)("th",{parentName:"tr",align:null},"Shortcut"),(0,o.kt)("th",{parentName:"tr",align:null},"Description"))),(0,o.kt)("tbody",{parentName:"table"},(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("inlineCode",{parentName:"td"},"ctx.callbackQuery")),(0,o.kt)("td",{parentName:"tr",align:null},"Gets the ",(0,o.kt)("a",{parentName:"td",href:"https://core.telegram.org/bots/api#callbackquery"},"callback query")," object. Shortcut to ",(0,o.kt)("inlineCode",{parentName:"td"},"ctx.update.callback_query"))),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("inlineCode",{parentName:"td"},"ctx.channelPost")),(0,o.kt)("td",{parentName:"tr",align:null},"Gets the ",(0,o.kt)("a",{parentName:"td",href:"https://core.telegram.org/bots/api#message"},"channel post")," object. Shortcut to ",(0,o.kt)("inlineCode",{parentName:"td"},"ctx.update.channel_post"))),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("inlineCode",{parentName:"td"},"ctx.chat")),(0,o.kt)("td",{parentName:"tr",align:null},"Gets the ",(0,o.kt)("a",{parentName:"td",href:"https://core.telegram.org/bots/api#chat"},"chat object")," of the message, callback query, or other things")),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("inlineCode",{parentName:"td"},"ctx.chatJoinRequest")),(0,o.kt)("td",{parentName:"tr",align:null},"Gets the ",(0,o.kt)("a",{parentName:"td",href:"https://core.telegram.org/bots/api#chatjoinrequest"},"chat join request")," object. Shortcut to ",(0,o.kt)("inlineCode",{parentName:"td"},"ctx.update.chat_join_request"))),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("inlineCode",{parentName:"td"},"ctx.chatMember")),(0,o.kt)("td",{parentName:"tr",align:null},"Gets the ",(0,o.kt)("a",{parentName:"td",href:"https://core.telegram.org/bots/api#chatmemberupdated"},"chat member")," object. Shortcut to ",(0,o.kt)("inlineCode",{parentName:"td"},"ctx.update.chat_member"))),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("inlineCode",{parentName:"td"},"ctx.chosenInlineResult")),(0,o.kt)("td",{parentName:"tr",align:null},"Gets the ",(0,o.kt)("a",{parentName:"td",href:"https://core.telegram.org/bots/api#choseninlineresult"},"chosen inline result")," object. Shortcut to ",(0,o.kt)("inlineCode",{parentName:"td"},"ctx.update.chosen_inline_result"))),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("inlineCode",{parentName:"td"},"ctx.passportData")),(0,o.kt)("td",{parentName:"tr",align:null},"Gets the ",(0,o.kt)("a",{parentName:"td",href:"https://core.telegram.org/bots/api#message"},"edited channel post")," object. Shortcut to ",(0,o.kt)("inlineCode",{parentName:"td"},"ctx.update.message.passportData"))),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("inlineCode",{parentName:"td"},"ctx.editedMessage")),(0,o.kt)("td",{parentName:"tr",align:null},"Gets the ",(0,o.kt)("a",{parentName:"td",href:"https://core.telegram.org/bots/api#message"},"edited message")," object. Shortcut to ",(0,o.kt)("inlineCode",{parentName:"td"},"ctx.update.edited_message"))),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("inlineCode",{parentName:"td"},"ctx.from")),(0,o.kt)("td",{parentName:"tr",align:null},"Gets the ",(0,o.kt)("a",{parentName:"td",href:"https://core.telegram.org/bots/api#user"},"author of the message, callback query"),", or other things")),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("inlineCode",{parentName:"td"},"ctx.inlineMessageId")),(0,o.kt)("td",{parentName:"tr",align:null},"Gets the inline message identifier for ",(0,o.kt)("a",{parentName:"td",href:"https://core.telegram.org/bots/api#callbackquery"},"callback queries")," or ",(0,o.kt)("a",{parentName:"td",href:"https://core.telegram.org/bots/api#choseninlineresult"},"chosen inline results"))),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("inlineCode",{parentName:"td"},"ctx.inlineQuery")),(0,o.kt)("td",{parentName:"tr",align:null},"Gets the ",(0,o.kt)("a",{parentName:"td",href:"https://core.telegram.org/bots/api#inlinequery"},"inline query")," object. Shortcut to ",(0,o.kt)("inlineCode",{parentName:"td"},"ctx.update.inline_query"))),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("inlineCode",{parentName:"td"},"ctx.message")),(0,o.kt)("td",{parentName:"tr",align:null},"Gets the ",(0,o.kt)("a",{parentName:"td",href:"https://core.telegram.org/bots/api#message"},"message")," object. Shortcut to ",(0,o.kt)("inlineCode",{parentName:"td"},"ctx.update.message"))),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("inlineCode",{parentName:"td"},"ctx.myChatMember")),(0,o.kt)("td",{parentName:"tr",align:null},"Gets the ",(0,o.kt)("a",{parentName:"td",href:"https://core.telegram.org/bots/api#chatmemberupdated"},"my chat member")," object. Shortcut to ",(0,o.kt)("inlineCode",{parentName:"td"},"ctx.update.my_chat_member"))),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("inlineCode",{parentName:"td"},"ctx.poll")),(0,o.kt)("td",{parentName:"tr",align:null},"Gets the ",(0,o.kt)("a",{parentName:"td",href:"https://core.telegram.org/bots/api#poll"},"poll")," object. Shortcut to ",(0,o.kt)("inlineCode",{parentName:"td"},"ctx.update.poll"))),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("inlineCode",{parentName:"td"},"ctx.pollAnswer")),(0,o.kt)("td",{parentName:"tr",align:null},"Gets the ",(0,o.kt)("a",{parentName:"td",href:"https://core.telegram.org/bots/api#pollanswer"},"poll answer")," object. Shortcut to ",(0,o.kt)("inlineCode",{parentName:"td"},"ctx.update.poll_answer"))),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("inlineCode",{parentName:"td"},"ctx.preCheckoutQuery")),(0,o.kt)("td",{parentName:"tr",align:null},"Gets the ",(0,o.kt)("a",{parentName:"td",href:"https://core.telegram.org/bots/api#precheckoutquery"},"pre checkout query")," object. Shortcut to ",(0,o.kt)("inlineCode",{parentName:"td"},"ctx.update.pre_checkout_query"))),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("inlineCode",{parentName:"td"},"ctx.senderChat")),(0,o.kt)("td",{parentName:"tr",align:null},"Gets the ",(0,o.kt)("a",{parentName:"td",href:"https://core.telegram.org/bots/api#chat"},"sender chat")," object of the message, callback query, or other things")),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("inlineCode",{parentName:"td"},"ctx.anyEntities")),(0,o.kt)("td",{parentName:"tr",align:null},"Gets the ",(0,o.kt)("inlineCode",{parentName:"td"},"entities")," for text or photo caption and other things")),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("inlineCode",{parentName:"td"},"ctx.anyMessage")),(0,o.kt)("td",{parentName:"tr",align:null},"Gets the ",(0,o.kt)("a",{parentName:"td",href:"https://core.telegram.org/bots/api#message"},"message")," object from cb query, channel post and things thinks")))),(0,o.kt)("p",null,"In other words, you can also do this:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-js",metastring:"showLineNumbers",showLineNumbers:!0},'bot.on("message", (ctx) => {\n  // Get the text of the message.\n  const text = ctx.message.text;\n});\n\nbot.on("edited_message", (ctx) => {\n  // Get the new, edited, text of the message.\n  const editedText = ctx.editedMessage.text;\n});\n')),(0,o.kt)("h3",{id:"available-actions"},"Available Actions"),(0,o.kt)("p",null,"If you want to respond to a message from a user, you could write this:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-js",metastring:"{7} showLineNumbers","{7}":!0,showLineNumbers:!0},'bot.on("message", async (ctx) => {\n  // Get the chat identifier.\n  const chatId = ctx.chat.id;\n  // The text to reply with\n  const text = "I got your message!";\n  // Send the reply.\n  await bot.telegram.sendMessage(chatId, text);\n});\n')),(0,o.kt)("p",null,"You can notice two things that are not optimal about this:"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"We must have access to the ",(0,o.kt)("inlineCode",{parentName:"li"},"bot")," object. This means that we have to pass the ",(0,o.kt)("inlineCode",{parentName:"li"},"bot")," object all around our code\nbase in order to respond, which is annoying when you have more than one source file, and you define\nyour listener somewhere else."),(0,o.kt)("li",{parentName:"ul"},"We have to take out the chat identifier of the context, and explicitly pass it to ",(0,o.kt)("inlineCode",{parentName:"li"},"sendMessage")," again.\nThis is annoying, too, because you most likely always want to respond to the same user that sent a message.\nImagine how often you would type the same thing over and over again!")),(0,o.kt)("p",null,"Regarding point 1, the context object simply provides you access to the same API object that you find on ",(0,o.kt)("inlineCode",{parentName:"p"},"bot.telegram"),",\nit is called ",(0,o.kt)("inlineCode",{parentName:"p"},"ctx.telegram"),". You could now write ",(0,o.kt)("inlineCode",{parentName:"p"},"ctx.telegram.sendMessage")," instead, and you no longer have to pass around\nyour bot object."),(0,o.kt)("p",null,"However, the real strength is to fix point 2. The context object lets you simply send a reply like this:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-js",metastring:"showLineNumbers",showLineNumbers:!0},'bot.on("message", async (ctx) => {\n  await ctx.reply("I got your message!");\n});\n\n// Or, even shorter:\nbot.on("message", (ctx) => ctx.reply("Gotcha!"));\n')),(0,o.kt)("p",null,"Under the hood, the context already knows its chat identifier (namely ",(0,o.kt)("inlineCode",{parentName:"p"},"ctx.message.chat.id"),"), so it gives you the\nreply method to just send a message back to the same chat. Internally, reply again calls ",(0,o.kt)("inlineCode",{parentName:"p"},"sendMessage"),"\nwith the chat identifier pre-filled for you."),(0,o.kt)("p",null,"Consequently, all methods on the context object take options objects of type Other as explained earlier.\nThis can be used to pass further configuration to every API call."),(0,o.kt)("p",null,"Naturally, every other method on ",(0,o.kt)("inlineCode",{parentName:"p"},"ctx.telegram")," has a shortcut with the correct pre-filled values, such as\n",(0,o.kt)("inlineCode",{parentName:"p"},"ctx.replyWithPhoto")," to reply with a photo, or ",(0,o.kt)("inlineCode",{parentName:"p"},"ctx.exportChatInviteLink")," to get an invite link for the respective chat."),(0,o.kt)("p",null,"Note that you may not want to react in the same chat always.\nIn this case, you can just fall back to using ",(0,o.kt)("inlineCode",{parentName:"p"},"ctx.telegram")," methods, and specify all options when calling them.\nFor example, if you receive a message from Alice and want to react by sending a message to Bob,\nthen you cannot use ",(0,o.kt)("inlineCode",{parentName:"p"},"ctx.reply")," because it will always send messages to the chat with Alice.\nInstead, call ",(0,o.kt)("inlineCode",{parentName:"p"},"ctx.telegram.sendMessage")," and specify the chat identifier of Bob."),(0,o.kt)("h3",{id:"how-context-objects-are-created"},"How Context Objects Are Created"),(0,o.kt)("p",null,"Whenever your bot receives a new message from Telegram, it is wrapped in an update object.\nIn fact, update objects can not only contain new messages, but also all other sorts of things, such as edits\nto messages, poll answers, and ",(0,o.kt)("a",{parentName:"p",href:"https://core.telegram.org/bots/api#update"},"much more"),"."),(0,o.kt)("p",null,"A fresh context object is created exactly once for every incoming update.\nContexts for different updates are completely unrelated objects, they only reference the same bot information via ",(0,o.kt)("inlineCode",{parentName:"p"},"ctx.me"),"."),(0,o.kt)("p",null,"The same context object for one update will be shared by all installed ",(0,o.kt)("a",{parentName:"p",href:"/docs/intro/middleware"},"middleware")," on the bot."),(0,o.kt)("h3",{id:"customizing-the-context-object"},"Customizing the Context Object"),(0,o.kt)("p",null,"You can install your own properties on the context object if you want."),(0,o.kt)("h3",{id:"via-middleware"},"Via Middleware"),(0,o.kt)("p",null,"The customizations can be easily done in ",(0,o.kt)("a",{parentName:"p",href:"/docs/intro/middleware"},"middleware"),"."),(0,o.kt)("p",null,"The idea is to install middleware before you register other listeners. You can then set the properties you want inside\nthese handlers."),(0,o.kt)("p",null,"For illustration purposes, let\u2019s say you want to set a property called ",(0,o.kt)("inlineCode",{parentName:"p"},"ctx.config")," on the context object.\nIn this example, we will use it to store some configuration about the project so that all handlers have access to it.\nThe configuration will make it easier to detect if the bot is used by its developer or by regular users."),(0,o.kt)("p",null,"Right after creating your bot, do this:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-js",metastring:"showLineNumbers",showLineNumbers:!0},"const BOT_DEVELOPER = 123456; // bot developer chat identifier\n\nbot.use(async (ctx, next) => {\n  // Modify context object here by setting the config.\n  ctx.config = {\n    botDeveloper: BOT_DEVELOPER,\n    isDeveloper: ctx.from?.id === BOT_DEVELOPER,\n  };\n  // Run remaining handlers.\n  await next();\n});\n")),(0,o.kt)("p",null,"After that, you can use ",(0,o.kt)("inlineCode",{parentName:"p"},"ctx.config")," in the remaining handlers."),(0,o.kt)("admonition",{type:"note"},(0,o.kt)("p",{parentName:"admonition"},"However, this example is not entirely safe, since you can overwrite some service properties of context,\nit is better to use a special reserved object in the context - ",(0,o.kt)("inlineCode",{parentName:"p"},"ctx.state"),". Example:"),(0,o.kt)("pre",{parentName:"admonition"},(0,o.kt)("code",{parentName:"pre",className:"language-js",metastring:"{5} showLineNumbers","{5}":!0,showLineNumbers:!0},"const BOT_DEVELOPER = 123456; // bot developer chat identifier\n\nbot.use(async (ctx, next) => {\n  // Modify context object here by setting the config.\n  ctx.state.config = {\n    botDeveloper: BOT_DEVELOPER,\n    isDeveloper: ctx.from?.id === BOT_DEVELOPER,\n  };\n  // Run remaining handlers.\n  await next();\n});\n"))),(0,o.kt)("h3",{id:"via-inheritance"},"Via Inheritance"),(0,o.kt)("p",null,"In addition to setting custom properties on the context object, you can subclass the ",(0,o.kt)("inlineCode",{parentName:"p"},"Context")," class."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-js",metastring:"showLineNumbers",showLineNumbers:!0},"class MyContext extends Context {\n  // etc\n}\n")),(0,o.kt)("p",null,"We will now see how to use custom classes for context objects."),(0,o.kt)("p",null,"When constructing your bot, you can pass a custom context constructor that will be used to instantiate the context objects."),(0,o.kt)("admonition",{type:"note"},(0,o.kt)("p",{parentName:"admonition"},"Your class must extend ",(0,o.kt)("inlineCode",{parentName:"p"},"Context"),".")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-js",metastring:"{4-13,18} {showLineNumbers}","{4-13,18}":!0,"{showLineNumbers}":!0},"const { Opengram, Context } = require(\"opengram\");\n\n// Define a custom context class.\nclass CustomContext extends Context {\n  constructor(update, telegram, botInfo) {\n    super(update, telegram, botInfo)\n  }\n\n  reply(...args) {\n    console.log('reply called with args: %j', args)\n    return super.reply(...args)\n  }\n}\n\n\n// Pass the constructor of the custom context class as an option.\nconst bot = new Telegraf(process.env.BOT_TOKEN, {\n  contextType: CustomContext\n})\n\nbot.start((ctx) => ctx.reply('Hello'))\nbot.help((ctx) => ctx.reply('Help message'))\nbot.launch()\n\n// Enable graceful stop\nprocess.once('SIGINT', () => bot.stop('SIGINT'))\nprocess.once('SIGTERM', () => bot.stop('SIGTERM'))\n")),(0,o.kt)("h3",{id:"via-botcontext"},"Via ",(0,o.kt)("inlineCode",{parentName:"h3"},"bot.context")),(0,o.kt)("p",null,(0,o.kt)("inlineCode",{parentName:"p"},"bot.context")," is an object that assigns a context instance each time a context is created,\nyou can add some props / functions to this object and get from context later"),(0,o.kt)("p",null,"For example, you can use it for injecting services, service locator, database models, database connection,\nanything that can be assigned to the context during bot initialization"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-js",metastring:"{4-7,12,16} showLineNumbers","{4-7,12,16}":!0,showLineNumbers:!0},"const { Opengram } = require(\"opengram\");\n\n// Some abstract database\nconst database = new Map([\n  ['123456', 'Info for user 123456'],\n  ['1234567', 'Info for user 1234567']\n])\n\nconst bot = new Telegraf(process.env.BOT_TOKEN)\n\n// Adding database object to context\nbot.context.database = database\n\n// Send user info when user call /me command\nbot.command('me', (ctx) => {\n  const userInfo = ctx.database.get(ctx.from.id)\n  return ctx.reply(userInfo) // Send \"Info for user ...\"\n})\n\nbot.launch()\n\n// Enable graceful stop\nprocess.once('SIGINT', () => bot.stop('SIGINT'))\nprocess.once('SIGTERM', () => bot.stop('SIGTERM'))\n")))}d.isMDXComponent=!0}}]);